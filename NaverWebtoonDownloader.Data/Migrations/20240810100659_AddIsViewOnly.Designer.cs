// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaverWebtoonDownloader.Data;

#nullable disable

namespace NaverWebtoonDownloader.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240810100659_AddIsViewOnly")]
    partial class AddIsViewOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Episode", b =>
                {
                    b.Property<int>("WebtoonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("No")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("StarScore")
                        .HasColumnType("REAL");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WebtoonID", "No");

                    b.ToTable("NaverEpisodes");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Image", b =>
                {
                    b.Property<int>("WebtoonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodeNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("No")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDownloaded")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("WebtoonID", "EpisodeNo", "No");

                    b.ToTable("NaverImages");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Webtoon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFree")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsViewOnly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("NaverWebtoons");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Episode", b =>
                {
                    b.HasOne("NaverWebtoonDownloader.Entities.Naver.Webtoon", "Webtoon")
                        .WithMany("Episodes")
                        .HasForeignKey("WebtoonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Webtoon");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Image", b =>
                {
                    b.HasOne("NaverWebtoonDownloader.Entities.Naver.Webtoon", "Webtoon")
                        .WithMany()
                        .HasForeignKey("WebtoonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NaverWebtoonDownloader.Entities.Naver.Episode", "Episode")
                        .WithMany("Images")
                        .HasForeignKey("WebtoonID", "EpisodeNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Episode");

                    b.Navigation("Webtoon");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Episode", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.Entities.Naver.Webtoon", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
